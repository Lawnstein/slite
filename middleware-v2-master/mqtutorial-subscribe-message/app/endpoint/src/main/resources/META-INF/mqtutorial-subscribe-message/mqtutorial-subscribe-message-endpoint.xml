<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sofa="http://schema.alipay.com/sofa/schema/slite"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://schema.alipay.com/sofa/schema/slite   http://schema.alipay.com/sofa/slite.xsd"
       default-autowire="byName">

    <!-- 增加一个 rest filter 主要保证,spring mvc 的8080 端口也能访问到8341 端口,即跨域访问-->
    <bean id="commonContainerResponseFilter"
          class="com.antcloud.tutorial.mq.endpoint.filter.CommonContainerResponseFilter">
        <property name="allowedOrigins">
            <set>
                <!-- 发布线上时:要把域名配置为线上发布的域名,保证只有配置的域名才允许访问这台机器 -->
                <value>http://localhost:8080</value>
                <value>http://localhost:8341</value>
                <!-- 这里大家需要注意:这个在使用chrome浏览器的插件postman插件测试后端数据时,需要加上这条保证能够postman正确提交数据-->
                <value>chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop</value>
            </set>
        </property>
    </bean>

    <!-- Declare a consumer bean with id "mqConsumer" -->
    <sofa:consumer id="mqConsumer" group="S_appname_service">
        <sofa:listener ref="mqMessageListener"/>
        <sofa:channels>
            <sofa:channel value="TP_DEFAULT">
                <sofa:event eventType="direct" eventCode="EC_DEFAULT" persistence="true"/>
            </sofa:channel>
        </sofa:channels>
        <sofa:binding.msg_broker/>
    </sofa:consumer>

    <!-- mq message listener -->
    <bean id="mqMessageListener" class="com.antcloud.tutorial.mq.endpoint.service.MqMessageListener"/>
</beans>